Прошивка написана на C++ с использованием C вставок.

Изначально писалась в Platformio, рекомендуется запускать там же.
В случае, если требуется собрать прошивку не в платформио, необходимо перенести все файлы из src на уровень выше.
В противном случае компилятор выдаст ошибку.

Структура прошивки:
-> src
|--> drivers
  -> FreeRTOS - C++ класс/обёртка для функций из FreeRTOS
  -> GPIO - C++ класс для работы с GPIO - чтение состояния пинов / запись
  -> NVS  - C++ обёртка для работы с NVS
  -> OTA  - C++ обёртка для работы с OTA. В данный момент отключен
  -> Time - Класс для работы с временем
  -> Task - Класс для работы с задачами
  -> Wifi - Класс для работы с Wi-Fi, включая обработчики соединения
|--> include - Заголовочные файлы
|--> main.cpp - точка входа в программу
|--> Query.cpp - Класс, реализующий парсинг HTTP запроса и разбиение его на удобные для восприятия части
|--> WebServer.cpp - Класс, реализующий WEB-сервер на устройстве
|--> API.cpp      - Класс, реализующий API устройства
|--> Device.cpp   - Класс, реализующий обработку команд, начинающихся с /device
|--> Commands.cpp - Класс, реализующий команды устройств. Состоит из базового класса и его потомков для каждой комманды
|--> Sensors.cpp  - Класс, реализующий сенсоры устройств. Состоит из базового класса и его потомков для каждого сенсора

test.cpp - служит для проверки работоспособности классов без запуска на устройстве.

Для компиляции из консоли необходимо выполнить следующую команду:
g++ -std=c++11 test.cpp Query.cpp API/API.cpp API/APIDevice.cpp  -o test

Комманда для чтения из Serial Monitor
pio device monitor --port /dev/cu.SLAB_USBtoUART --baud 115200 --filter direct --e
cho

IP адрес при старте в режиме точки доступа: 192.164.4.1
